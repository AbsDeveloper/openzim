# sample logging-properties for application zeno
# put this in zeno.properties and use:
#   log_init("zeno.properties");
# in your application to initialize logging
#
# define categories with:
#   log_define("some.category")
# this defines a static function, so you must put it outside other functions.
# you can define a category per file or a category per namespace.
#
# print logging-messages with:
#   log_fatal("some fatal message");
#   log_error("some error message");
#   log_warn("some warn message");
#   log_info("some info message");
#   log_debug("some debug message");
#
rootLogger=INFO

# define logger-categories
#logger.zeno=WARN
#logger.zeno.search=DEBUG
#logger.zeno.file.impl=DEBUG
#logger.zeno.qunicode=DEBUG
#logger.component.zenocomp=DEBUG
#logger.component.skin=DEBUG
#logger.component.article=DEBUG
#logger.component.search=DEBUG
#logger.component.random=DEBUG
#logger.tntnet.comploader=DEBUG
#logger.tntnet.messageheader=DEBUG
#logger.tntnet.httpmessage.parser=DEBUG
#logger.tntnet.httpreply=DEBUG
#logger.tntnet.worker=DEBUG
#logger.tntnet=DEBUG
#logger.tntnet.scopemanager=DEBUG
#logger.tntnet.dispatcher=DEBUG
#logger.cxxtools.net=DEBUG
#logger.cxxtools.iconvstream=DEBUG
#logger.zenoreader.skin=DEBUG
#logger.zeno.backgroundreader=DEBUG

# uncomment if you want to log to a file
#file=zeno.log
maxfilesize=10MB
maxbackupindex=1
flushdelay=100  # delay write in milliseconds
#host=localhost:1234
