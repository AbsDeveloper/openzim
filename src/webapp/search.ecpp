<%include>global.ecpp</%include>
<%args>
go; // Artikel
ft; // Volltext
</%args>
<%pre>
#include <zeno/search.h>
</%pre>
<%config>
double weightTitle = zeno::Search::getWeightTitle();
double weightOcc = zeno::Search::getWeightOcc();
double weightOccOff = zeno::Search::getWeightOccOff();
double weightPlus = zeno::Search::getWeightPlus();
double weightDist = zeno::Search::getWeightDist();
double weightPos = zeno::Search::getWeightPos();
double weightDistinctWords = zeno::Search::getWeightDistinctWords();
</%config>
<%cpp>

  zeno::Search::setWeightTitle(weightTitle);
  zeno::Search::setWeightOcc(weightOcc);
  zeno::Search::setWeightOccOff(weightOccOff);
  zeno::Search::setWeightPlus(weightPlus);
  zeno::Search::setWeightDist(weightDist);
  zeno::Search::setWeightPos(weightPos);
  zeno::Search::setWeightDistinctWords(weightDistinctWords);

  if (!ft.empty())
    return fulltext(request, reply, qparam);

  if (!articles.empty())
  {
</%cpp>
<& skin qparam nextComp="searcharticles" type=(typeSpecial) >
<%cpp>
  }
  else
  {
    title = zeno::QUnicodeString("Suche nach: " + result.getExpression());
</%cpp>
<& skin qparam nextComp="searchresults" type=(typeSpecial) >
<%cpp>
  }

</%cpp>
%
<%def fulltext>
<%args>
e;  // Begriff
</%args>
<%pre>
#include <cxxtools/iconverter.h>
</%pre>
<%cpp>

  articles.clear();

  log_debug("search expression \"" << e << '"');
  static cxxtools::IConverter iso8859_utf8("UTF-8", "ISO-8859-1");
  zeno::Search search(files);
  result.clear();
  search.search(result, iso8859_utf8(e));

  log_debug(result.size() << " articles found");

  title = zeno::QUnicodeString("Suche nach: " + e);

</%cpp>
<& skin qparam nextComp="searchresults" type=(typeSpecial) >
</%def>
